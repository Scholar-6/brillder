@import 'src/assets/sass/partials/variables';
@import 'src/assets/sass/partials/mixins';
@import 'src/assets/sass/partials/extensions';

.assigned-brick-description {
  position: relative;
  padding-left: 3vw !important;

  @include tabletP {
    height: calc(#{$bricks-height / 6.35});
  }

  padding-top: 1vh;

  $base: calc(100vh - 5.834vw - 2vw - 5.2vw - 2.1vh - 0.5vh - 6vh);

  .first-part {
    display: flex;
    @extend %flexCenter;
  }

  .left-brick-circle {
    position: absolute;
    top: calc(1.2vh + 1vh + calc(#{$base/6.35/6}));

    > div {
      height: calc(#{$base/6.35/1.5/2.2});
      width: calc(#{$base/6.35/1.5});
      border-radius: 0.3vw;
      background: var(--gray);
    }

    .horizontal-brick {
      cursor: pointer;
      @extend %flexCenter;
      svg {
        width: 68%;
        height: 68%;
        color: white;
      }
    }
  }

  .short-brick-info {
    font-size: 0.8vw;
    padding-left: 2.5vw;
    width: 30vw;
    padding-top: 0;
    @extend %flexToXCenter;
    flex-direction: column;
    @extend %linkDescription;
    padding-right: 0;
    .link-description {
      width: 100% !important;
      font-size: 1.2vw;
      margin-bottom: 0;
    }
    .link-info {
      width: 100%;
      font-size: 0.9vw;
      text-align: justify;
    }
  }
  .vertical-brick {
    cursor: pointer;
    width: calc(#{$bricks-height / 6.35 / 1.5 / 2.38});
    @extend %flexCenter;
    border-left: 0;
    border-right: 0;
    border-radius: 0.3vw;
    height: calc(#{$bricks-height / 6.35 / 1.5});
    width: width;

    $border-radius: calc(#{$bricks-height / 6.35 / 15});
    $margin-height: calc(#{$bricks-height / 6.35 / 50});

    .brick-top,
    .brick-top-middle,
    .brick-middle,
    .brick-bottom-middle,
    .brick-bottom {
      width: 100%;
    }

    .brick-top,
    .brick-top-middle,
    .brick-bottom-middle,
    .brick-bottom {
      height: calc(#{$bricks-height / 6.35 / 20});
    }

    .brick-top,
    .brick-top-middle {
      margin-bottom: $margin-height;
    }

    .brick-bottom,
    .brick-bottom-middle {
      margin-top: $margin-height;
    }

    .brick-top {
      border-top-left-radius: $border-radius;
      border-top-right-radius: $border-radius;
    }

    .brick-bottom {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }

    .brick-middle {
      width: 100%;
      height: calc(#{$bricks-height / 6.35 / 3});
      svg {
        width: 80%;
        margin-left: 10%;
        height: inherit;
        color: white;
      }
    }
  }
  .assignment-second-part {
    display: flex;
    width: 30vw;
    .users-complete-count {
      margin-left: 2vw;
      margin-right: 2vw;
      @extend %flexCenter;
      span {
        font-size: 1.5vw;
        margin-right: 0.5vw;
      }
      svg {
        margin-left: 0.3vw;
        height: 1.4vw;
        width: 1.4vw;
      }
    }
    .average {
      @extend %flexCenter;
      font-size: 1.5vw;
    }
  }
  .reminder-container {
    width: 4vw;
    @extend %flexCenter;
    .reminder-icon {
      color: white;
      border-radius: 50%;
      padding: 0.25vw;
      stroke-width: 1.5;
      width: 2vw;
      height: 2vw;
      background: var(--theme-yellow);
    }
  }
  .teach-brick-actions-container {
    @extend %flexCenter;
    width: 3vw;
  }
}

.teach-circles-container {
  $width: 16vw;
  width: calc(#{$width} * 2);
  display: flex;

  .teach-circle-flex-container {
    width: $width;
  }
}
